import pandas as pd
import math

df = pd.DataFrame(pd.read_csv("DataID3.csv"))

tar = df.columns[-1]
def entropy(probs):
	return sum(-prob*math.log(prob,2) for prob in probs)
	
def ent_of_list(a_list):
	from collections import Counter
	cnt = Counter(x for x in a_list)
	#print(cnt)
	num_inst=len(a_list)*1.0
	probs=[x/num_inst for x in cnt.values()]
	return entropy(probs)

def info_gain(df, split_attrname,tar_attr):
	df_split = df.groupby(split_attrname)
	df_ent = ent_of_list(df[tar])
	a = list()
	for name,group in df_split:
		a.append(ent_of_list(group[tar])*len(group)/len(df))	
	nobs = len(df.index)*1.0
	x=0.0
	for i in a:
		x+=i
	#print "Information gain of attr ",split_attrname," is ",(df_ent-x)
	return (df_ent-x)
	
def id3(df,tar_attrname,attrnames,def_class):
	from collections import Counter
	cnt = Counter(x for x in df[tar_attrname])
	if(len(cnt)==1):
		print max(cnt.keys())
		return max(cnt.keys())
	elif len(df)==0 or not(attrnames):
		return def_class
	def_class=max(cnt.keys())
	gainz = list()
	for attr in attrnames:
		gainz.append(info_gain(df,attr,tar_attrname))
	#print(gainz)
	index_of_max= gainz.index(max(gainz))	
	print "Splitting attribute is ",attrnames[index_of_max]
	
	df_split = df.groupby(attrnames[index_of_max])
	for name,group in df_split:
		print "For ",name 
		id3(group,tar_attrname,attrnames,def_class)


attr = list(df.columns[:-1].values)
if 1 in df[tar]:
	default = 1
else: 
	default = Y 	
id3(df,tar,attr,default)	
